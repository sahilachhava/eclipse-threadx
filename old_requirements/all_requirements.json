{
  "expand": "schema,names",
  "startAt": 0,
  "maxResults": 80,
  "total": 80,
  "issues": [
    {
      "id": "20001",
      "key": "REQ-DOC-001",
      "fields": {
        "summary": "Advanced real-time scheduling",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide deterministic, priority-based thread scheduling with configurable preemption policies.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20002",
      "key": "REQ-DOC-002",
      "fields": {
        "summary": "Preemption threshold scheduling",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "RTOS must support preemption threshold mechanism to prevent lower-priority threads from preempting current thread.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20003",
      "key": "REQ-DOC-003",
      "fields": {
        "summary": "Event chaining capability",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System shall support chaining of events for efficient multi-event processing and synchronization.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20004",
      "key": "REQ-DOC-004",
      "fields": {
        "summary": "Picokernel architecture",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Core kernel must maintain minimal memory footprint while providing full RTOS functionality.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20005",
      "key": "REQ-DOC-005",
      "fields": {
        "summary": "Interrupt management system",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "RTOS shall provide comprehensive interrupt handling and nested interrupt support.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20006",
      "key": "REQ-DOC-006",
      "fields": {
        "summary": "Inter-thread message passing",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support multiple IPC mechanisms including queues, semaphores, and mutexes.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20007",
      "key": "REQ-DOC-007",
      "fields": {
        "summary": "Rich system services",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "RTOS shall provide comprehensive set of kernel services for thread, memory, and timer management.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20008",
      "key": "REQ-DOC-008",
      "fields": {
        "summary": "ThreadX SMP support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support symmetric multi-processing for multi-core embedded applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20009",
      "key": "REQ-DOC-009",
      "fields": {
        "summary": "High-performance SMP kernel",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "SMP implementation shall maintain real-time determinism across multiple processor cores.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20010",
      "key": "REQ-DOC-010",
      "fields": {
        "summary": "Dynamic module loading",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "ThreadX Modules component must support runtime loading of applications built separately from resident code.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20011",
      "key": "REQ-DOC-011",
      "fields": {
        "summary": "Module isolation infrastructure",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System shall provide infrastructure for secure module execution and resource management.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20012",
      "key": "REQ-DOC-012",
      "fields": {
        "summary": "RTOS adaptation layers",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide compatibility layers for FreeRTOS, POSIX, and OSEK APIs.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20013",
      "key": "REQ-DOC-013",
      "fields": {
        "summary": "Migration assistance",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Adaptation layers shall ease application migration from other RTOS platforms to ThreadX.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20014",
      "key": "REQ-DOC-014",
      "fields": {
        "summary": "Maximum speed configuration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support optimized configuration with 32 priorities, disabled preemption threshold, and inline operations.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20015",
      "key": "REQ-DOC-015",
      "fields": {
        "summary": "Minimum size configuration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "RTOS shall provide memory-optimized build options for resource-constrained embedded systems.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20016",
      "key": "REQ-DOC-016",
      "fields": {
        "summary": "Deterministic real-time behavior",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All kernel operations must have bounded execution times suitable for hard real-time applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20017",
      "key": "REQ-DOC-017",
      "fields": {
        "summary": "Hardware-based isolation",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must utilize MCU/MPU hardware protection mechanisms for code and data isolation.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20018",
      "key": "REQ-DOC-018",
      "fields": {
        "summary": "Secure communication support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "RTOS shall provide components enabling OEMs to implement secure communication protocols.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20019",
      "key": "REQ-DOC-019",
      "fields": {
        "summary": "Vulnerability management",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Security issues must be reportable through Eclipse Foundation Security Team with defined response process.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20020",
      "key": "REQ-DOC-020",
      "fields": {
        "summary": "Supported version maintenance",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Version 6.4.x shall be actively maintained for security updates and critical bug fixes.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20021",
      "key": "REQ-DOC-021",
      "fields": {
        "summary": "ARM Cortex processor support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support ARM Cortex-M (M0-M85), Cortex-A (A5-A78), and Cortex-R (R4-R7) architectures.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20022",
      "key": "REQ-DOC-022",
      "fields": {
        "summary": "RISC-V architecture support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "RTOS shall provide native support for RISC-V 32-bit processor architecture.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20023",
      "key": "REQ-DOC-023",
      "fields": {
        "summary": "Multi-architecture compatibility",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support ARC, RX, x86, and Xtensa processor architectures.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20024",
      "key": "REQ-DOC-024",
      "fields": {
        "summary": "Development platform support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "RTOS shall support Linux and Win32 platforms for development and testing purposes.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20025",
      "key": "REQ-DOC-025",
      "fields": {
        "summary": "Semiconductor SDK integration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must integrate with major semiconductor vendor SDKs (STMicroelectronics, NXP, Renesas, Microchip).",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20026",
      "key": "REQ-DOC-026",
      "fields": {
        "summary": "CMake build system",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "RTOS shall provide composable CMake-based build system supporting multiple toolchains and targets.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20027",
      "key": "REQ-DOC-027",
      "fields": {
        "summary": "ARM GNU Toolchain compatibility",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must be fully compatible with ARM GNU Toolchain for cross-compilation.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20028",
      "key": "REQ-DOC-028",
      "fields": {
        "summary": "Git submodule integration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "RTOS shall support integration as git submodule using CMake add_subdirectory() function.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20029",
      "key": "REQ-DOC-029",
      "fields": {
        "summary": "Safety certification compliance",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must maintain safety-certified OS status with vendor-neutral, open-source approach.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20030",
      "key": "REQ-DOC-030",
      "fields": {
        "summary": "Open source licensing",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "RTOS shall be distributed under permissive MIT license allowing commercial use.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20031",
      "key": "REQ-DOC-031",
      "fields": {
        "summary": "Eclipse governance compliance",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Project must follow Eclipse Foundation development process and IP policy requirements.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20032",
      "key": "REQ-DOC-032",
      "fields": {
        "summary": "Production-grade reliability",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System shall demonstrate reliability suitable for deployment in millions of embedded devices.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20033",
      "key": "REQ-DOC-033",
      "fields": {
        "summary": "CMake version support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Build system must support CMake version 3.0 or later for cross-platform compilation.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20034",
      "key": "REQ-DOC-034",
      "fields": {
        "summary": "Cross-compilation toolchain",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System shall support ARM GNU Toolchain for embedded target compilation.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20035",
      "key": "REQ-DOC-035",
      "fields": {
        "summary": "Ninja build support",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Build system must be compatible with Ninja for fast, parallel builds.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20036",
      "key": "REQ-DOC-036",
      "fields": {
        "summary": "TraceX analysis integration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "RTOS shall support TraceX tool for graphical system behavior analysis and debugging.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20037",
      "key": "REQ-DOC-037",
      "fields": {
        "summary": "User configuration interface",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide tx_user.h file interface for build-time feature configuration.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20038",
      "key": "REQ-DOC-038",
      "fields": {
        "summary": "Build optimization options",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "RTOS shall offer configurable build options optimizing for either execution speed or memory usage.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20039",
      "key": "REQ-DOC-039",
      "fields": {
        "summary": "Timer tick configurability",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must allow configuration of timer tick rate via TX_TIMER_TICKS_PER_SECOND parameter.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20040",
      "key": "REQ-DOC-040",
      "fields": {
        "summary": "Priority level configuration",
        "issuetype": {
          "id": "100",
          "description": "Software design requirement",
          "name": "Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "RTOS shall support configurable thread priority levels up to maximum of 32 priorities.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20041",
      "key": "REQ-CODE-001",
      "fields": {
        "summary": "Picokernel initialization sequence",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Kernel must follow strict initialization order: low-level setup, high-level initialization, application define, then scheduler entry.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20042",
      "key": "REQ-CODE-002",
      "fields": {
        "summary": "Never-returning kernel entry",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "The _tx_initialize_kernel_enter function must never return and directly transition to scheduler loop.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20043",
      "key": "REQ-CODE-003",
      "fields": {
        "summary": "Priority-based thread scheduling",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support configurable priority levels with TX_MAX_PRIORITIES as multiple of 32.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20044",
      "key": "REQ-CODE-004",
      "fields": {
        "summary": "Thread state management",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Threads must support READY (0), COMPLETED (1), TERMINATED (2), and additional suspension states.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20045",
      "key": "REQ-CODE-005",
      "fields": {
        "summary": "Preemption threshold support",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Each thread must have configurable preemption threshold separate from priority level.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20046",
      "key": "REQ-CODE-006",
      "fields": {
        "summary": "Time-slice scheduling",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Threads must support configurable time-slice values for round-robin scheduling within same priority.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20047",
      "key": "REQ-CODE-007",
      "fields": {
        "summary": "Automatic thread startup",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Thread creation must support AUTO_START and DONT_START options for immediate execution control.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20048",
      "key": "REQ-CODE-008",
      "fields": {
        "summary": "Byte pool allocation",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide dynamic memory allocation through byte pools with variable-size block allocation.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20049",
      "key": "REQ-CODE-009",
      "fields": {
        "summary": "Block pool allocation",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support fixed-size block pools for fast, deterministic memory allocation.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20050",
      "key": "REQ-CODE-010",
      "fields": {
        "summary": "Memory alignment enforcement",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All memory allocations must maintain proper alignment based on TX_ALIGN_TYPE requirements.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20051",
      "key": "REQ-CODE-011",
      "fields": {
        "summary": "Mutex priority inheritance",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Mutexes must support optional priority inheritance to prevent priority inversion.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20052",
      "key": "REQ-CODE-012",
      "fields": {
        "summary": "Event flags operations",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Event flags must support AND/OR operations with optional clearing (TX_AND, TX_OR, TX_AND_CLEAR, TX_OR_CLEAR).",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20053",
      "key": "REQ-CODE-013",
      "fields": {
        "summary": "Queue message passing",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Queues must support configurable message sizes (1, 2, 4, 8, 16 ULONGs).",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20054",
      "key": "REQ-CODE-014",
      "fields": {
        "summary": "Semaphore counting",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Semaphores must support counting with configurable initial and maximum values.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20055",
      "key": "REQ-CODE-015",
      "fields": {
        "summary": "Comprehensive error codes",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must return specific error codes (TX_POOL_ERROR, TX_PTR_ERROR, TX_SIZE_ERROR, etc.).",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20056",
      "key": "REQ-CODE-016",
      "fields": {
        "summary": "Parameter validation",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All API functions must have corresponding txe_ error-checking variants.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20057",
      "key": "REQ-CODE-017",
      "fields": {
        "summary": "Safety critical support",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Optional TX_SAFETY_CRITICAL mode must provide exception handling for critical failures.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20058",
      "key": "REQ-CODE-018",
      "fields": {
        "summary": "Stack overflow checking",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Optional TX_ENABLE_STACK_CHECKING must detect stack corruption during execution.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20059",
      "key": "REQ-CODE-019",
      "fields": {
        "summary": "Execution profiling",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Optional TX_EXECUTION_PROFILE_ENABLE must track thread execution statistics.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20060",
      "key": "REQ-CODE-020",
      "fields": {
        "summary": "Random stack filling",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Optional TX_ENABLE_RANDOM_NUMBER_STACK_FILLING must fill stacks with random patterns for debugging.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20061",
      "key": "REQ-CODE-021",
      "fields": {
        "summary": "No-wait operations",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All blocking operations must support TX_NO_WAIT (0) for immediate return.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20062",
      "key": "REQ-CODE-022",
      "fields": {
        "summary": "Forever wait support",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All blocking operations must support TX_WAIT_FOREVER (0xFFFFFFFF) for indefinite blocking.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20063",
      "key": "REQ-CODE-023",
      "fields": {
        "summary": "Timeout value handling",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All blocking operations must support arbitrary timeout values in timer ticks.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20064",
      "key": "REQ-CODE-024",
      "fields": {
        "summary": "Interrupt-safe operations",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All kernel operations must be safe for execution from interrupt service routines.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20065",
      "key": "REQ-CODE-025",
      "fields": {
        "summary": "System state tracking",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Kernel must maintain global system state to prevent invalid operations (initialization vs. running).",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20066",
      "key": "REQ-CODE-026",
      "fields": {
        "summary": "Thread context validation",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must detect and prevent invalid operations from wrong execution context.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20067",
      "key": "REQ-CODE-027",
      "fields": {
        "summary": "Event tracing support",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Optional TX_ENABLE_EVENT_TRACE must record all kernel operations for analysis.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20068",
      "key": "REQ-CODE-028",
      "fields": {
        "summary": "User event insertion",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must allow user-defined trace events through tx_trace_user_event_insert.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20069",
      "key": "REQ-CODE-029",
      "fields": {
        "summary": "Performance metrics",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Optional performance monitoring must track timing and resource usage statistics.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20070",
      "key": "REQ-CODE-030",
      "fields": {
        "summary": "Build-time configuration",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support extensive compile-time configuration through TX_* defines.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20071",
      "key": "REQ-CODE-031",
      "fields": {
        "summary": "User configuration interface",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "tx_user.h must override default configuration parameters.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20072",
      "key": "REQ-CODE-032",
      "fields": {
        "summary": "Port-specific extensions",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "TX_PORT_SPECIFIC_DATA must allow architecture-specific additions.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20073",
      "key": "REQ-CODE-033",
      "fields": {
        "summary": "Dynamic module support",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Module manager must support runtime loading of separately compiled applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20074",
      "key": "REQ-CODE-034",
      "fields": {
        "summary": "Module isolation",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Each module must have isolated memory space and controlled kernel access.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20075",
      "key": "REQ-CODE-035",
      "fields": {
        "summary": "Module lifecycle management",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support module loading, starting, stopping, and unloading operations.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20076",
      "key": "REQ-CODE-036",
      "fields": {
        "summary": "System timer thread",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Kernel must create dedicated timer thread with highest priority for timer processing.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20077",
      "key": "REQ-CODE-037",
      "fields": {
        "summary": "Application timer support",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support user-created timers with one-shot and periodic modes.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20078",
      "key": "REQ-CODE-038",
      "fields": {
        "summary": "Timer tick processing",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Timer interrupts must be processed either in ISR or dedicated timer thread context.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20079",
      "key": "REQ-CODE-039",
      "fields": {
        "summary": "API consistency requirements",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All public APIs must follow tx_object_operation naming pattern.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20080",
      "key": "REQ-CODE-040",
      "fields": {
        "summary": "Return value standards",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All APIs must return TX_SUCCESS (0) on success or specific error code on failure.",
        "verifiableByCodeOnly": true
      }
    }
  ]
}