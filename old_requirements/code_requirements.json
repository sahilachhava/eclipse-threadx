{
  "expand": "schema,names",
  "startAt": 0,
  "maxResults": 40,
  "total": 40,
  "issues": [
    {
      "id": "20041",
      "key": "CODE-001",
      "fields": {
        "summary": "Picokernel initialization sequence",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Kernel must follow strict initialization order: low-level setup, high-level initialization, application define, then scheduler entry.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20042",
      "key": "CODE-002",
      "fields": {
        "summary": "Never-returning kernel entry",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "The _tx_initialize_kernel_enter function must never return and directly transition to scheduler loop.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20043",
      "key": "CODE-003",
      "fields": {
        "summary": "Priority-based thread scheduling",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support configurable priority levels with TX_MAX_PRIORITIES as multiple of 32.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20044",
      "key": "CODE-004",
      "fields": {
        "summary": "Thread state management",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Threads must support READY (0), COMPLETED (1), TERMINATED (2), and additional suspension states.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20045",
      "key": "CODE-005",
      "fields": {
        "summary": "Preemption threshold support",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Each thread must have configurable preemption threshold separate from priority level.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20046",
      "key": "CODE-006",
      "fields": {
        "summary": "Time-slice scheduling",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Threads must support configurable time-slice values for round-robin scheduling within same priority.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20047",
      "key": "CODE-007",
      "fields": {
        "summary": "Automatic thread startup",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Thread creation must support AUTO_START and DONT_START options for immediate execution control.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20048",
      "key": "CODE-008",
      "fields": {
        "summary": "Byte pool allocation",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must provide dynamic memory allocation through byte pools with variable-size block allocation.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20049",
      "key": "CODE-009",
      "fields": {
        "summary": "Block pool allocation",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support fixed-size block pools for fast, deterministic memory allocation.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20050",
      "key": "CODE-010",
      "fields": {
        "summary": "Memory alignment enforcement",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All memory allocations must maintain proper alignment based on TX_ALIGN_TYPE requirements.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20051",
      "key": "CODE-011",
      "fields": {
        "summary": "Mutex priority inheritance",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Mutexes must support optional priority inheritance to prevent priority inversion.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20052",
      "key": "CODE-012",
      "fields": {
        "summary": "Event flags operations",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Event flags must support AND/OR operations with optional clearing (TX_AND, TX_OR, TX_AND_CLEAR, TX_OR_CLEAR).",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20053",
      "key": "CODE-013",
      "fields": {
        "summary": "Queue message passing",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Queues must support configurable message sizes (1, 2, 4, 8, 16 ULONGs).",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20054",
      "key": "CODE-014",
      "fields": {
        "summary": "Semaphore counting",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Semaphores must support counting with configurable initial and maximum values.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20055",
      "key": "CODE-015",
      "fields": {
        "summary": "Comprehensive error codes",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must return specific error codes (TX_POOL_ERROR, TX_PTR_ERROR, TX_SIZE_ERROR, etc.).",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20056",
      "key": "CODE-016",
      "fields": {
        "summary": "Parameter validation",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All API functions must have corresponding txe_ error-checking variants.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20057",
      "key": "CODE-017",
      "fields": {
        "summary": "Safety critical support",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Optional TX_SAFETY_CRITICAL mode must provide exception handling for critical failures.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20058",
      "key": "CODE-018",
      "fields": {
        "summary": "Stack overflow checking",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Optional TX_ENABLE_STACK_CHECKING must detect stack corruption during execution.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20059",
      "key": "CODE-019",
      "fields": {
        "summary": "Execution profiling",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Optional TX_EXECUTION_PROFILE_ENABLE must track thread execution statistics.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20060",
      "key": "CODE-020",
      "fields": {
        "summary": "Random stack filling",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Optional TX_ENABLE_RANDOM_NUMBER_STACK_FILLING must fill stacks with random patterns for debugging.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20061",
      "key": "CODE-021",
      "fields": {
        "summary": "No-wait operations",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All blocking operations must support TX_NO_WAIT (0) for immediate return.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20062",
      "key": "CODE-022",
      "fields": {
        "summary": "Forever wait support",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All blocking operations must support TX_WAIT_FOREVER (0xFFFFFFFF) for indefinite blocking.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20063",
      "key": "CODE-023",
      "fields": {
        "summary": "Timeout value handling",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All blocking operations must support arbitrary timeout values in timer ticks.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20064",
      "key": "CODE-024",
      "fields": {
        "summary": "Interrupt-safe operations",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All kernel operations must be safe for execution from interrupt service routines.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20065",
      "key": "CODE-025",
      "fields": {
        "summary": "System state tracking",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Kernel must maintain global system state to prevent invalid operations (initialization vs. running).",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20066",
      "key": "CODE-026",
      "fields": {
        "summary": "Thread context validation",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must detect and prevent invalid operations from wrong execution context.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20067",
      "key": "CODE-027",
      "fields": {
        "summary": "Event tracing support",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Optional TX_ENABLE_EVENT_TRACE must record all kernel operations for analysis.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20068",
      "key": "CODE-028",
      "fields": {
        "summary": "User event insertion",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must allow user-defined trace events through tx_trace_user_event_insert.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20069",
      "key": "CODE-029",
      "fields": {
        "summary": "Performance metrics",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Optional performance monitoring must track timing and resource usage statistics.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20070",
      "key": "CODE-030",
      "fields": {
        "summary": "Build-time configuration",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support extensive compile-time configuration through TX_* defines.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20071",
      "key": "CODE-031",
      "fields": {
        "summary": "User configuration interface",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "tx_user.h must override default configuration parameters.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20072",
      "key": "CODE-032",
      "fields": {
        "summary": "Port-specific extensions",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "TX_PORT_SPECIFIC_DATA must allow architecture-specific additions.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20073",
      "key": "CODE-033",
      "fields": {
        "summary": "Dynamic module support",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Module manager must support runtime loading of separately compiled applications.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20074",
      "key": "CODE-034",
      "fields": {
        "summary": "Module isolation",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Each module must have isolated memory space and controlled kernel access.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20075",
      "key": "CODE-035",
      "fields": {
        "summary": "Module lifecycle management",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support module loading, starting, stopping, and unloading operations.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20076",
      "key": "CODE-036",
      "fields": {
        "summary": "System timer thread",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Kernel must create dedicated timer thread with highest priority for timer processing.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20077",
      "key": "CODE-037",
      "fields": {
        "summary": "Application timer support",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "System must support user-created timers with one-shot and periodic modes.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20078",
      "key": "CODE-038",
      "fields": {
        "summary": "Timer tick processing",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "Timer interrupts must be processed either in ISR or dedicated timer thread context.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20079",
      "key": "CODE-039",
      "fields": {
        "summary": "API consistency requirements",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All public APIs must follow tx_object_operation naming pattern.",
        "verifiableByCodeOnly": true
      }
    },
    {
      "id": "20080",
      "key": "CODE-040",
      "fields": {
        "summary": "Return value standards",
        "issuetype": {
          "id": "101",
          "description": "Implementation-derived requirement",
          "name": "Code Requirement"
        },
        "status": {
          "id": "approved",
          "name": "Approved"
        },
        "assignee": {
          "displayName": "Unassigned",
          "accountId": "unassigned"
        },
        "reporter": {
          "displayName": "System",
          "accountId": "system"
        },
        "description": "All APIs must return TX_SUCCESS (0) on success or specific error code on failure.",
        "verifiableByCodeOnly": true
      }
    }
  ]
}